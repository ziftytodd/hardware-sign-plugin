{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,qBAAsB,SAAQ,SAAS;IAClD,KAAK,CAAC,WAAW;QACf,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAC,CAAC,CAAA,CAAA,CAAC,CAAE,CAAC;IAC9D,CAAC;IACD,KAAK,CAAC,IAAI,CAAC,OAAoB;QAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,EAAC,WAAW,EAAE,KAAK,EAAC,CAAC,CAAA,CAAA,CAAC,CAAE,CAAC;IAC7D,CAAC;IACD,KAAK,CAAC,YAAY;QAChB,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,EAAC,WAAW,EAAE,QAAQ,EAAC,CAAC,CAAA,CAAA,CAAC,CAAE,CAAC;IAChE,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { HardwareSignPlugin, GenerateKeyResult, SignOptions, SignResult, GetPublicKeyResult } from './definitions';\n\nexport class HardwareSignPluginWeb extends WebPlugin implements HardwareSignPlugin {\n  async generateKey(): Promise<GenerateKeyResult> {\n    return new Promise((res) => { res({\"status\": \"created\"})} );\n  }\n  async sign(options: SignOptions): Promise<SignResult> {\n    console.log(options);\n    return new Promise((res) => { res({\"signature\": \"web\"})} );\n  }\n  async getPublicKey(): Promise<GetPublicKeyResult> {\n    return new Promise((res) => { res({\"publicKey\": \"webkey\"})} );\n  }\n}\n"]}